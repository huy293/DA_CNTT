import React, { useEffect, useState } from "react";
import axiosInstance from "../../config/axios";
import { formatDate } from "../../utils/dateUtils";
import BarChart from "../../components/Charts/BarChart";
import LineChart from "../../components/Charts/LineChart";
import PieChart from "../../components/Charts/PieChart";
import DonutChart from "../../components/Charts/DonutChart";
import Datatables from "../../components/Datatable/Datatables";

const Dashboard = () => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [data, setData] = useState({
    stats: null,
    monthlyViews: [],
    genreDistribution: [],
    topSeasons: [],
    topUsers: [],
    topFavoriteSeasons: [],
    topRatedSeasons: [],
    newUsers: [],
    newSeasons: [],
    userRoleDistribution: [],
    commentsByMonth: [],
    completionRate: null
  });

  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true);
        setError(null);
        
        // Fetch t·∫•t c·∫£ data c√πng l√∫c
        const endpoints = [
          '/api/dashboard/stats',
          '/api/dashboard/monthly-views',
          '/api/dashboard/genre-distribution',
          '/api/dashboard/top-seasons',
          '/api/dashboard/top-users',
          '/api/dashboard/top-favorite-movies',
          '/api/dashboard/top-rated-seasons',
          '/api/dashboard/newest-users',
          '/api/dashboard/newest-seasons',
          '/api/dashboard/user-role-distribution',
          '/api/dashboard/comments-by-month',
          '/api/dashboard/completion-rate'
        ];

        const responses = await Promise.all(
          endpoints.map(endpoint => axiosInstance.get(endpoint))
        );

        console.log("üìä Responses received:", responses.map(r => r.status));

        const [
          stats,
          monthlyViews,
          genreDistribution,
          topSeasons,
          topUsers,
          topFavoriteSeasons,
          topRatedSeasons,
          newUsers,
          newSeasons,
          userRoleDistribution,
          commentsByMonth,
          completionRate
        ] = responses.map(response => response.data);

        console.log("üìä Parsed data:", {
          stats,
          monthlyViews,
          genreDistribution,
          topSeasons,
          topUsers,
          topFavoriteSeasons,
          topRatedSeasons,
          newUsers,
          newSeasons,
          userRoleDistribution,
          commentsByMonth,
          completionRate
        });

        setData({
          stats: stats || { totalMovies: 0, totalUsers: 0, totalEpisodes: 0, totalRatings: 0, totalComments: 0, averageRating: 0 },
          monthlyViews: monthlyViews || [],
          genreDistribution: genreDistribution || [],
          topSeasons: topSeasons || [],
          topUsers: topUsers || [],
          topFavoriteSeasons: topFavoriteSeasons || [],
          topRatedSeasons: topRatedSeasons || [],
          newUsers: newUsers || [],
          newSeasons: newSeasons || [],
          userRoleDistribution: userRoleDistribution || [],
          commentsByMonth: commentsByMonth || [],
          completionRate: completionRate || { totalEpisodes: 0, completedViews: 0, completionRate: 0 }
        });

        console.log("‚úÖ Dashboard data loaded successfully!");
      } catch (err) {
        console.error("‚ùå Error fetching dashboard data:", err);
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) {
    return (
      <div className="p-4 sm:ml-64 dark:bg-gray-900 min-h-screen">
        <div className="flex items-center justify-center h-64">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600 dark:text-gray-300">ƒêang t·∫£i d·ªØ li·ªáu...</p>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="p-4 sm:ml-64 dark:bg-gray-900 min-h-screen">
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
          <strong className="font-bold">L·ªói!</strong>
          <span className="block sm:inline"> {error}</span>
        </div>
      </div>
    );
  }

  return (
    <div className="p-4 sm:ml-64 dark:bg-gray-900 min-h-screen">
      <div className="p-4 border-2 border-dashed rounded-lg border-gray-200 dark:border-gray-700 mt-14">
        <h1 className="text-2xl font-bold text-gray-800 dark:text-white mb-6">
          Dashboard Th·ªëng k√™
        </h1>

        {/* Stats Cards */}
        {data.stats && (
          <div className="mb-6">
            <h2 className="text-xl font-bold text-gray-800 dark:text-white mb-4">
              üìä Th·ªëng k√™ t·ªïng quan h·ªá th·ªëng
            </h2>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
              <div className="bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow">
                <div className="text-gray-500 text-sm">T·ªïng phim</div>
                <div className="text-2xl font-bold text-blue-600">{data.stats.totalMovies}</div>
                <div className="text-xs text-gray-400 mt-1">S·ªë l∆∞·ª£ng phim trong h·ªá th·ªëng</div>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow">
                <div className="text-gray-500 text-sm">T·ªïng user</div>
                <div className="text-2xl font-bold text-green-600">{data.stats.totalUsers}</div>
                <div className="text-xs text-gray-400 mt-1">T·ªïng s·ªë ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng k√Ω</div>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow">
                <div className="text-gray-500 text-sm">T·ªïng t·∫≠p phim</div>
                <div className="text-2xl font-bold text-purple-600">{data.stats.totalEpisodes}</div>
                <div className="text-xs text-gray-400 mt-1">T·ªïng s·ªë t·∫≠p phim c√≥ s·∫µn</div>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow">
                <div className="text-gray-500 text-sm">T·ªïng comment</div>
                <div className="text-2xl font-bold text-orange-600">{data.stats.totalComments}</div>
                <div className="text-xs text-gray-400 mt-1">T·ªïng s·ªë b√¨nh lu·∫≠n c·ªßa ng∆∞·ªùi d√πng</div>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow">
                <div className="text-gray-500 text-sm">T·ªïng rating</div>
                <div className="text-2xl font-bold text-indigo-600">{data.stats.totalRatings}</div>
                <div className="text-xs text-gray-400 mt-1">T·ªïng s·ªë ƒë√°nh gi√° sao</div>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded-lg p-4 text-center shadow">
                <div className="text-gray-500 text-sm">Rating trung b√¨nh</div>
                <div className="text-2xl font-bold text-yellow-600">{data.stats.averageRating}</div>
                <div className="text-xs text-gray-400 mt-1">ƒêi·ªÉm ƒë√°nh gi√° trung b√¨nh (1-5 sao)</div>
              </div>
            </div>
            <div className="bg-blue-50 dark:bg-blue-900/20 p-3 rounded-lg">
              <p className="text-sm text-blue-700 dark:text-blue-300">
                <strong>üí° Gi·∫£i th√≠ch:</strong> C√°c s·ªë li·ªáu n√†y ph·∫£n √°nh t·ªïng quan v·ªÅ quy m√¥ v√† ho·∫°t ƒë·ªông c·ªßa h·ªá th·ªëng streaming phim. 
                S·ªë l∆∞·ª£ng phim, user v√† t∆∞∆°ng t√°c (comment, rating) cho th·∫•y m·ª©c ƒë·ªô ph·ªï bi·∫øn v√† s·ª± tham gia c·ªßa c·ªông ƒë·ªìng.
              </p>
            </div>
          </div>
        )}

        {/* Completion Rate */}
        {data.completionRate && (
          <div className="bg-white dark:bg-gray-800 rounded-lg p-4 mb-6">
            <h2 className="text-xl font-bold text-gray-800 dark:text-white mb-4">
              üéØ T·ª∑ l·ªá ho√†n th√†nh xem phim
            </h2>
            <div className="text-center mb-4">
              <div className="text-4xl font-bold text-blue-600">
                {data.completionRate.completionRate}%
              </div>
              <div className="text-gray-500 text-sm">
                {data.completionRate.completedViews} l∆∞·ª£t xem ho√†n th√†nh / {data.completionRate.totalEpisodes} t·∫≠p phim
              </div>
            </div>
            <div className="bg-green-50 dark:bg-green-900/20 p-3 rounded-lg">
              <p className="text-sm text-green-700 dark:text-green-300">
                <strong>üí° Gi·∫£i th√≠ch:</strong> T·ª∑ l·ªá n√†y cho bi·∫øt ph·∫ßn trƒÉm ng∆∞·ªùi d√πng xem h·∫øt m·ªôt t·∫≠p phim. 
                T·ª∑ l·ªá cao cho th·∫•y n·ªôi dung h·∫•p d·∫´n v√† tr·∫£i nghi·ªám xem t·ªët. T·ª∑ l·ªá th·∫•p c√≥ th·ªÉ do n·ªôi dung kh√¥ng ph√π h·ª£p ho·∫∑c v·∫•n ƒë·ªÅ k·ªπ thu·∫≠t.
              </p>
            </div>
          </div>
        )}

        {/* Charts Row 1 */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
          {/* Monthly Views Chart */}
          {data.monthlyViews.length > 0 && (
            <div className="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-2">
                üìà L∆∞·ª£t xem theo th√°ng
              </h3>
              <BarChart
                title=""
                data={data.monthlyViews.map(item => ({
                  name: `Th√°ng ${item.month}`,
                  value: item.views || item.count || 0
                }))}
              />
              <div className="bg-yellow-50 dark:bg-yellow-900/20 p-3 rounded-lg mt-3">
                <p className="text-sm text-yellow-700 dark:text-yellow-300">
                  <strong>üí° Ph√¢n t√≠ch:</strong> Bi·ªÉu ƒë·ªì n√†y cho th·∫•y xu h∆∞·ªõng xem phim theo th·ªùi gian. 
                  Th√°ng c√≥ l∆∞·ª£t xem cao th∆∞·ªùng l√† th√°ng c√≥ nhi·ªÅu phim m·ªõi ho·∫∑c s·ª± ki·ªán ƒë·∫∑c bi·ªát. 
                  Gi√∫p l√™n k·∫ø ho·∫°ch ph√°t h√†nh n·ªôi dung hi·ªáu qu·∫£.
                </p>
              </div>
            </div>
          )}

          {/* Genre Distribution Chart */}
          {data.genreDistribution.length > 0 && (
            <div className="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-2">
                üé≠ Ph√¢n b·ªë th·ªÉ lo·∫°i phim
              </h3>
              <PieChart
                title=""
                data={data.genreDistribution.map(item => ({
                  name: item.name,
                  value: item.movieCount || item.count || 0
                }))}
              />
              <div className="bg-purple-50 dark:bg-purple-900/20 p-3 rounded-lg mt-3">
                <p className="text-sm text-purple-700 dark:text-purple-300">
                  <strong>üí° Ph√¢n t√≠ch:</strong> Th·ªÉ lo·∫°i n√†o chi·∫øm t·ª∑ l·ªá cao nh·∫•t? 
                  ƒêi·ªÅu n√†y gi√∫p hi·ªÉu s·ªü th√≠ch c·ªßa ng∆∞·ªùi d√πng v√† ƒë·ªãnh h∆∞·ªõng ph√°t tri·ªÉn n·ªôi dung. 
                  C√≥ th·ªÉ c√¢n b·∫±ng gi·ªØa th·ªÉ lo·∫°i ph·ªï bi·∫øn v√† th·ªÉ lo·∫°i √≠t ƒë∆∞·ª£c quan t√¢m.
                </p>
              </div>
            </div>
          )}
        </div>

        {/* Charts Row 2 */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
          {/* Comments by Month Chart */}
          {data.commentsByMonth.length > 0 && (
            <div className="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-2">
                üí¨ Comment theo th√°ng
              </h3>
              <LineChart
                title=""
                data={data.commentsByMonth.map(item => ({
                  name: `Th√°ng ${item.month}`,
                  value: item.commentCount || item.count || 0
                }))}
              />
              <div className="bg-orange-50 dark:bg-orange-900/20 p-3 rounded-lg mt-3">
                <p className="text-sm text-orange-700 dark:text-orange-300">
                  <strong>üí° Ph√¢n t√≠ch:</strong> S·ªë l∆∞·ª£ng comment ph·∫£n √°nh m·ª©c ƒë·ªô t∆∞∆°ng t√°c c·ªßa c·ªông ƒë·ªìng. 
                  Th√°ng c√≥ nhi·ªÅu comment th∆∞·ªùng l√† th√°ng c√≥ phim g√¢y tranh c√£i ho·∫∑c r·∫•t hay. 
                  Gi√∫p ƒë√°nh gi√° ch·∫•t l∆∞·ª£ng n·ªôi dung v√† s·ª± tham gia c·ªßa ng∆∞·ªùi d√πng.
                </p>
              </div>
            </div>
          )}

          {/* User Role Distribution Chart */}
          {data.userRoleDistribution.length > 0 && (
            <div className="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-2">
                üë• Ph√¢n b·ªë vai tr√≤ user
              </h3>
              <DonutChart
                title=""
                data={data.userRoleDistribution.map(item => ({
                  name: item.role,
                  value: item.userCount || item.count || 0
                }))}
              />
              <div className="bg-indigo-50 dark:bg-indigo-900/20 p-3 rounded-lg mt-3">
                <p className="text-sm text-indigo-700 dark:text-indigo-300">
                  <strong>üí° Ph√¢n t√≠ch:</strong> T·ª∑ l·ªá gi·ªØa user th∆∞·ªùng, moderator v√† admin. 
                  ƒê·∫£m b·∫£o c√≥ ƒë·ªß nh√¢n l·ª±c qu·∫£n l√Ω cho s·ªë l∆∞·ª£ng user hi·ªán t·∫°i. 
                  C√¢n b·∫±ng gi·ªØa quy·ªÅn h·∫°n v√† tr√°ch nhi·ªám c·ªßa t·ª´ng vai tr√≤.
                </p>
              </div>
            </div>
          )}
        </div>

        {/* Data Tables Row */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
          {/* Top Seasons Table */}
          {data.topSeasons.length > 0 && (
            <div className="bg-white dark:bg-gray-800 rounded-lg">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white p-4 pb-2">
                üèÜ Top phim xem nhi·ªÅu nh·∫•t
              </h3>
              <Datatables
                data={data.topSeasons}
                columns={[
                  { name: "T√™n phim", selector: (row) => row.title || (row.season && row.season.title) || "Kh√¥ng r√µ" },
                  { name: "L∆∞·ª£t xem", selector: (row) => row.viewCount }
                ]}
              />
              <div className="bg-red-50 dark:bg-red-900/20 p-3 m-4 rounded-lg">
                <p className="text-sm text-red-700 dark:text-red-300">
                  <strong>üí° √ù nghƒ©a:</strong> Nh·ªØng phim n√†y thu h√∫t nhi·ªÅu ng∆∞·ªùi xem nh·∫•t. 
                  C√≥ th·ªÉ ph√¢n t√≠ch ƒë·ªÉ hi·ªÉu y·∫øu t·ªë th√†nh c√¥ng: th·ªÉ lo·∫°i, di·ªÖn vi√™n, th·ªùi ƒëi·ªÉm ph√°t h√†nh, 
                  ho·∫∑c ch·∫•t l∆∞·ª£ng n·ªôi dung.
                </p>
              </div>
            </div>
          )}

          {/* Top Users Table */}
          {data.topUsers.length > 0 && (
            <div className="bg-white dark:bg-gray-800 rounded-lg">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white p-4 pb-2">
                üëë Top user xem nhi·ªÅu nh·∫•t
              </h3>
              <Datatables
                data={data.topUsers}
                columns={[
                  { name: "Username", selector: (row) => row.user?.username || "Kh√¥ng r√µ" },
                  { name: "L∆∞·ª£t xem", selector: (row) => row.viewCount }
                ]}
              />
              <div className="bg-green-50 dark:bg-green-900/20 p-3 m-4 rounded-lg">
                <p className="text-sm text-green-700 dark:text-green-300">
                  <strong>üí° √ù nghƒ©a:</strong> Nh·ªØng user n√†y l√† kh√°ch h√†ng trung th√†nh nh·∫•t. 
                  C√≥ th·ªÉ xem x√©t ch∆∞∆°ng tr√¨nh VIP, ∆∞u ƒë√£i ƒë·∫∑c bi·ªát ho·∫∑c m·ªùi tham gia beta test 
                  ƒë·ªÉ tƒÉng s·ª± g·∫Øn k·∫øt v·ªõi n·ªÅn t·∫£ng.
                </p>
              </div>
            </div>
          )}
        </div>

        {/* Newest Users Table */}
        {data.newUsers.length > 0 && (
          <div className="bg-white dark:bg-gray-800 rounded-lg mb-6">
            <h3 className="text-lg font-semibold text-gray-800 dark:text-white p-4 pb-2">
              üÜï User m·ªõi nh·∫•t
            </h3>
            <Datatables
              data={data.newUsers}
              columns={[
                { name: "Username", selector: (row) => row.username },
                { name: "Email", selector: (row) => row.email },
                { name: "Ng√†y ƒëƒÉng k√Ω", selector: (row) => formatDate(row.createdAt) }
              ]}
            />
            <div className="bg-blue-50 dark:bg-blue-900/20 p-3 m-4 rounded-lg">
              <p className="text-sm text-blue-700 dark:text-blue-300">
                <strong>üí° √ù nghƒ©a:</strong> Theo d√µi user m·ªõi ƒëƒÉng k√Ω ƒë·ªÉ ƒë√°nh gi√° hi·ªáu qu·∫£ marketing, 
                ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i ho·∫∑c viral marketing. C√≥ th·ªÉ g·ª≠i email ch√†o m·ª´ng, 
                h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng ƒë·ªÉ tƒÉng t·ª∑ l·ªá gi·ªØ ch√¢n user.
              </p>
            </div>
          </div>
        )}

        {/* Newest Seasons Table */}
        {data.newSeasons.length > 0 && (
          <div className="bg-white dark:bg-gray-800 rounded-lg mb-6">
            <h3 className="text-lg font-semibold text-gray-800 dark:text-white p-4 pb-2">
              üé¨ Phim m·ªõi nh·∫•t
            </h3>
            <Datatables
              data={data.newSeasons}
              columns={[
                { name: "T√™n phim", selector: (row) => row.title },
                { name: "Ng√†y th√™m", selector: (row) => formatDate(row.createdAt) }
              ]}
            />
            <div className="bg-purple-50 dark:bg-purple-900/20 p-3 m-4 rounded-lg">
              <p className="text-sm text-purple-700 dark:text-purple-300">
                <strong>üí° √ù nghƒ©a:</strong> Theo d√µi phim m·ªõi ƒë∆∞·ª£c th√™m v√†o h·ªá th·ªëng. 
                ƒê·∫£m b·∫£o t√≠nh c·∫≠p nh·∫≠t c·ªßa n·ªôi dung v√† ƒë√°nh gi√° hi·ªáu qu·∫£ c·ªßa team content. 
                C√≥ th·ªÉ l√™n k·∫ø ho·∫°ch qu·∫£ng b√° cho nh·ªØng phim m·ªõi n√†y.
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Dashboard;